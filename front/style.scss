@use "base.scss";

* {
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
    font-family: 'Gotham Pro', sans-serif;
    @include base.fonts(14px, 400, 20px, base.$color-gray);
}

strong{
    font-weight: 600;
}



h1, h1 > * {
    @include base.fonts(44px, 600, 60px, base.$color-black);
} 

h2 {
    @include base.fonts(36px, 600, 46px, base.$color-blue);
}

h3 {
    @include base.fonts(24px, 400, 30px, base.$color-black);
}

h4 {
    @include base.fonts(18px, 400, 26px, base.$color-gray);
}

.wrapper {
    max-width: 400px;
    border: 1px solid #000;
    padding: 20px;
    margin: 0 auto;
}

.test-list {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

label {
    color: rgb(152, 182, 201);
    display: flex;
    align-items: center;
    gap: 12px;
}

// Radio
input[type=radio] {
    position: relative;
}

input[type=radio]::after {
    @include base.pseudo-element(50%, 50%, 16px, 16px);
    border-radius: 50%;
    border: 2px solid rgb(205, 237, 255);
    z-index: 1;
    transform: translate(-50%, -50%);
    background-color: #fff;
}

input[type=radio]::before {
    @include base.pseudo-element(50%, 50%, 14px, 14px);
    border-radius: 50%;
    z-index: 2;
    background-color: base.$color-blue;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: all 0.2s;
}

input[type=radio]:checked::before {
    opacity: 1;
}

input[type=radio]:checked~span {
    color: base.$color-black;
}

// Checkbox
input[type=checkbox] {
    position: relative;
}

input[type=checkbox]::after {
    @include base.pseudo-element(50%, 50%, 16px, 16px);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    background-color: rgb(226, 237, 243);
    border: 2px solid rgb(226, 237, 243);
    transition: all 0.2s;
}

input[type=checkbox]::before {
    @include base.pseudo-element(50%, 50%, 10px, 8px);
    transform: translate(-50%, -50%);
    z-index: 2;
    background: url("./images/icon/check.svg") center no-repeat;
    opacity: 0;
}

input[type=checkbox]:hover::after {
    border: 2px solid rgb(232, 232, 232);
}

input[type=checkbox]:checked::after {
    background-color: base.$color-blue;
    border: 2px solid base.$color-blue;
}

input[type=checkbox]:checked::before {
    opacity: 1;
}

input[type=checkbox]:checked~span {
    color: base.$color-black;
}

// Input
input {
    outline: none;
    padding: 15px 20px 13px;
    max-height: 48px;
    background-color: rgb(248, 252, 255);
    border: 2px solid rgb(248, 252, 255);
    transition: all 0.2s;
    border-radius: 10px;
}

input:hover {
    border: 2px solid rgb(231, 239, 244);
}

input:focus {
    background-color: rgb(255, 255, 255);
}

input.accepted {
    background-color: rgb(248, 252, 255);
    color: base.$color-black;
}

input.error {
    background-color: rgb(255, 248, 248);
    border: 2px solid base.$color-red;
    color: base.$color-black;
}

select {
    padding: 15px 20px 13px;
    max-height: 48px;
    background-color: rgb(250, 250, 250);
    border-radius: 10px;
    outline: none;
    color: rgb(152, 182, 201);
    transition: all 0.2s;
    color: base.$color-black;
    border: 2px solid rgb(250, 250, 250)
}

select:hover {
    background-color: rgb(243, 243, 243);
    cursor: pointer;
    border: 2px solid rgb(232, 232, 232);
}

// Button
button {
    position: relative;
    cursor: pointer;
    height: 48px;
    border-radius: 25px;
    background: linear-gradient(213.92deg, rgb(177, 226, 255) -31.405%, rgb(104, 199, 255) 161.932%);
    transition: all 0.2s;
    position: relative;
    border: 0px;
    padding: 0px 18px 0px 50px;

    &:hover {
        box-shadow: 0px 0px 25px 0px rgba(146, 214, 255, 0.5);
        background: linear-gradient(213.92deg, rgb(198, 234, 255) -31.405%, rgb(129, 208, 255) 161.932%);
    }

    &:focus {
        background: linear-gradient(213.92deg, rgb(134, 210, 255) -31.405%, rgb(71, 187, 255) 161.932%);
    }

    &:focus>i {
        background: linear-gradient(213.92deg, rgb(134, 210, 255) -31.405%, rgb(71, 187, 255) 161.932%);
    }

    &>span {
        @include base.fonts(16px, 600, 26px, #fff);
    }

    &>i {
        position: absolute;
        top: 50%;
        left: 2%;
        transform: translateY(-50%);
        color: #fff;
        padding: 11px;
        border-radius: 25px;
        background: linear-gradient(-37.80deg, rgb(177, 226, 255) 1.249%, rgb(104, 199, 255) 89.556%);
    }
}

.button{
    &-white{
        background: #fff;
        box-shadow: 0px 0px 25px 0px rgba(82, 191, 255, 0.15);
        &>span{
            color: base.$color-blue;
        }
        &:hover > span{
            color: #fff;
        }
    }
}

// Border Rough
.border-rough {
    position: relative;

    &::after {
        content: "";
        position: absolute;
        bottom: -10px;
        left: 0;
        right: 0;
        height: 20px;
        background: url("./images/border.svg") center no-repeat;
    }

}


.container {
    max-width: 1140px;
    margin: 0 auto;
}

// Header
.header {
    &-inner {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
}

// Social
.social{
    display: flex;
    gap: 15px;
    &-icon{
        width: 15px;
        color: base.$color-blue;
        transition: all 0.2s;
        &:hover{
            opacity: 0.8;
        }
    }
}

// Navigate
.nav{
    &-list{
        display: flex;
        list-style-type: none;
        gap: 20px;
    }

    &-link{
        text-decoration: none;
        transition: all 0.2s;
        &:hover{
            color: base.$color-blue;
        }
    }
}

// lang
.lang{
    display: flex;
    gap: 6px;
    &-item{
        cursor: pointer;
        &--active{
            color: base.$color-blue;
        }
    }
}


// Main
.main{
    &-inner{
        padding-top: 10%;
        height: 800px;
        display: flex;
        flex-direction: column;
    }
    &-slider{
        flex: 1 1 auto;
        max-width: 721px;
        &__title{
            margin-bottom: 25px;
        }

        &__subtitle{
            margin-bottom: 50px;
        }
    }

    &-info{
        display: flex;
        gap: 40px;
    }
}

// Info-item
.info-item{
    display: flex;
    align-items: center;
    gap: 6px;
    & > i {
        color: base.$color-blue;
    }
   
}